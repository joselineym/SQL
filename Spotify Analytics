# In this project, I utilized a dataset of Spotify tracks obtained from Kaggle. 
# I created a database table to store the Spotify data
# And then I conducted various analytical queries using SQL to extract insights and trends from the dataset.

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

# Next I inserted the Spotify Data .csv into the table

# Then, I analyze the data using the following SQL. 

SELECT *
FROM BIT_DB.Spotifydata;

--1. What are the top 5 most popular tracks?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
Order by Popularity DESC
LIMIT 5;

--2. What is the average danceability of the the tracks
SELECT Avg(danceability) AS avg_danceability
FROM BIT_DB.Spotifydata;

--3. List the tracks that have a featured artist and order by most to least popular
SELECT track_name, popularity
FROM BIT_DB.Spotifydata
WHERE track_name like '%feat%'
ORDER BY popularity DESC;

--4. Which tracks have an energy level greater than 0.8?
SELECT track_name, energy
FROM BIT_DB.Spotifydata
WHERE energy>0.8 
ORDER By energy ASC; 

--5. What are the top 5 longest tracks?
SELECT track_name, duration_ms
FROM BIT_DB.Spotifydata
Order by duration_ms DESC
LIMIT 5;

--6. What is the average tempo of tracks grouped by artist?
SELECT artist_name, AVG(tempo) AS average_tempo
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--7. Which artist has the most songs in the dataset?
Select artist_name, Count(*) AS number_of_songs
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY number_of_songs DESC
Limit 1;

--8. Which tracks have both high valence (greater than 0.8) and high energy (greater than 0.8)?
SELECT track_name
FROM BIT_DB.Spotifydata
WHERE valence > 0.8
AND energy >0.8;

--9. Which tracks have a duration longer than 4 minutes?
SELECT track_name
FROM BIT_DB.Spotifydata
WHERE duration_ms >240000;

--10. How many tracks are in each energy level?
SELECT COUNT(*) AS track_count,
CASE 
WHEN energy > 0.75 THEN 'High Energy'
WHEN energy > 0.35 THEN 'Medium Energy'
ELSE 'Low Energy'
END AS Energy_Level
FROM BIT_DB.Spotifydata
GROUP BY Energy_Level
ORDER BY track_count DESC;

--11. Which artist has the highest average loudness across their tracks?
SELECT artist_name, AVG(loudness) AS AVG_loudness
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG_loudness DESC
Limit 1;

--12. What is the average tempo for tracks with a major song mode? 
SELECT AVG(tempo) AS avg_tempo
FROM BIT_DB.Spotifydata
WHERE song_mode = 1;

--13. What tracks have high danceability and liveness?
SELECT track_name, danceability, liveness
FROM BIT_DB.Spotifydata
WHERE danceability > 0.60
AND liveness > 0.20;

--14. Which tracks with high speechiness (greater than 0.2) also have a popularity higher than 85?
SELECT track_name, speechiness, popularity
FROM BIT_DB.Spotifydata
WHERE speechiness > 0.2
AND popularity > 85
ORDER BY popularity DESC;

